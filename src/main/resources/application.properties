# ServerProperties
server.port=8080
server.servlet.context-path=/community

# ThymeleafProperties
#\u5173\u95EDthymeleaf\u6A21\u677F\u5F15\u64CE\u7684\u7F13\u5B58
spring.thymeleaf.cache=false

# DataSourceProperties          allowPublicKeyRetrieval=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.nowcoder.community.entity
#\u81EA\u52A8\u751F\u6210id\u7684\u673A\u5236
mybatis.configuration.useGeneratedKeys=true
mybatis.configuration.mapUnderscoreToCamelCase=true

# logger
#\u5C06\u8BCD\u5305\u7684\u65E5\u5FD7\u7EA7\u522B\u8C03\u5230\u6700\u5927
#logging.level.com.nowcoder.community=debug
#\u65E5\u5FD7\u4F4D\u7F6E
#logging.file.name=d:/Phase_I_project/data/nowcoder/community.log
#logging.file=d:/Phase_I_project/data/nowcoder/community.log


# MailProperties
spring.mail.host=smtp.sina.com
spring.mail.port=465
spring.mail.username=di277160461@sina.com
spring.mail.password=f73cbd40e77e8db8
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtl.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# community
community.path.domain=http://localhost:8080
community.path.upload=d:/Phase_I_project/data/upload

# RedisProperties
spring.redis.database=11
spring.redis.host=localhost
spring.redis.port=6379

# KafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=community.consumer.group
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=3000

# ElasticsearchProperties
spring.data.elasticsearch.cluster-name=community
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300

#\u5141\u8BB8\u8986\u76D6\u548C\u4F7F\u7528\u91CD\u590D\u7684bean
spring.main.allow-bean-definition-overriding=true

#TaskExecutionProperties
#\u6B64\u7EBF\u7A0B\u4EFB\u52A1\u662F\u53EF\u4EE5\u901A\u8FC7\u6D4F\u89C8\u5668\u4E3B\u52A8\u89E6\u53D1\u7684
#\u7EBF\u7A0B\u6C60\u4E2D\u6838\u5FC3\u7EBF\u7A0B\u7684\u6570\u91CF
spring.task.execution.pool.core-size=5
#\u6700\u5927\u6269\u5BB9\u7684\u7EBF\u7A0B\u6570\u91CF
spring.task.execution.pool.max-size=15
#\u961F\u5217\u7684\u5BB9\u91CF(\u8D77\u5230\u7F13\u51B2\u7684\u4F5C\u7528)
spring.task.execution.pool.queue-capacity=100

#TaskSchedulingProperties
#\u6B64\u7EBF\u7A0B\u4EFB\u52A1\u53EF\u4EE5\u901A\u8FC7\u53C2\u6570\u9884\u5224
spring.task.scheduling.pool.size=5

# QuartzProperties
spring.quartz.job-store-type = jdbc
spring.quartz.scheduler-name = communityScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId = AUTO
spring.quartz.properties.org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered = true
spring.quartz.properties.org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount = 5

#wk
wk.image.command=G:/wkhtmltox/bin/wkhtmltoimage
wk.image.storage=D:/Phase_I_project/data/wk-images

# qiniu
qiniu.key.access=cGS6yoSX-1rQurBZvrRilQEtFTYrl6olG0FNNZ8s
qiniu.key.secret=gNp8B2EGQxmJOQd3nR-YUcakLEu3008KcAAPl_Kn
qiniu.bucket.header.name=community-header-dm
qiniu.bucket.header.url=http://rparq8vet.hn-bkt.clouddn.com
qiniu.bucket.share.name=community-share-dm
qiniu.bucket.share.url=http://rpaskv269.hn-bkt.clouddn.com